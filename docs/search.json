[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Reinstein’s template for Quarto (WIP)",
    "section": "",
    "text": "This is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books."
  },
  {
    "objectID": "chapters/intro.html",
    "href": "chapters/intro.html",
    "title": "\n1  Introduction\n",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming."
  },
  {
    "objectID": "chapters/intro.html#key-content",
    "href": "chapters/intro.html#key-content",
    "title": "\n1  Introduction\n",
    "section": "\n1.1 Key content",
    "text": "1.1 Key content\n\n\n\n\n\n\nExpand To Learn About Collapse\n\n\n\n\n\nThis is an example of a ‘folded’ caution callout that can be expanded by the user. You can use collapse=\"true\" to collapse it by default or collapse=\"false\" to make a collapsible callout that is expanded by default."
  },
  {
    "objectID": "chapters/intro.html#create-an-object-to-see-if-it-crosses-chapters",
    "href": "chapters/intro.html#create-an-object-to-see-if-it-crosses-chapters",
    "title": "\n1  Introduction\n",
    "section": "\n1.2 Create an object to see if it crosses chapters",
    "text": "1.2 Create an object to see if it crosses chapters\n\nCodextest <- 24"
  },
  {
    "objectID": "chapters/intro.html#example-of-inline-code",
    "href": "chapters/intro.html#example-of-inline-code",
    "title": "\n1  Introduction\n",
    "section": "\n1.3 Example of inline code",
    "text": "1.3 Example of inline code\nBefore we defined the object xtest (see previous code block). You can also use integrate short code blocks into the narrative using “inline code” … Type 24 and the value of the object xtest shows up in your code, here 24."
  },
  {
    "objectID": "chapters/intro.html#showing-some-material",
    "href": "chapters/intro.html#showing-some-material",
    "title": "\n1  Introduction\n",
    "section": "\n1.4 Showing some material",
    "text": "1.4 Showing some material\nWhat if I want the code to be folded but not to spit results and side effects onto the screen?\n\nCode3+5\n\na <- \"happiness\"\n\n\nhappiness\nDid it display the sum? Was the object defined?"
  },
  {
    "objectID": "chapters/intro.html#labelingcaptioning-chunks",
    "href": "chapters/intro.html#labelingcaptioning-chunks",
    "title": "\n1  Introduction\n",
    "section": "\n1.5 Labeling/captioning chunks",
    "text": "1.5 Labeling/captioning chunks\nWait, why do we just have ‘code’ labeling the chunks when you fold them. It would be much more useful to have a descriptive label you can see in the html. We can do this in each chunk with #| code-summary: \"blah blah\", as below\nNote: the chunk options content itself is not shown. Below, we have:\n\n#| label: car-talk\n#| code-summary: \"Car talk stuff\"\n\nhead(mtcars)\n\n\nCar talk stuffhead(mtcars)\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "chapters/summary.html",
    "href": "chapters/summary.html",
    "title": "\n2  Summary\n",
    "section": "",
    "text": "You need to reload packages (and data) in every chapter, unlike in our previous Bookdown setups."
  },
  {
    "objectID": "chapters/summary.html#air-quality",
    "href": "chapters/summary.html#air-quality",
    "title": "\n2  Summary\n",
    "section": "\n2.1 Air Quality",
    "text": "2.1 Air Quality\nFigure 2.1 further explores the impact of temperature on ozone level.\n\nCodelibrary(pacman)\np_load(ggplot2)\nlibrary(ggplot2)\n\nggplot(airquality, aes(Temp, Ozone)) +\n  geom_point() +\n  geom_smooth(method = \"loess\"\n)\n\n\n\nFigure 2.1: Temperature and ozone level.\n\n\n\n\nIs the object from the previous chapter still there?\n\nCodextest\n\nError in eval(expr, envir, enclos): object 'xtest' not found\n\n\n\nCodeI'm a bug -- will it halt??\n\nError: <text>:1:2: unexpected INCOMPLETE_STRING\n1: I'm a bug -- will it halt??\n     ^"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  }
]